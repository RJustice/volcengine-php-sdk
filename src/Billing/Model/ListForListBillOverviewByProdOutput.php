<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Billing\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class ListForListBillOverviewByProdOutput implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ListForListBillOverviewByProdOutput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'bill_category_parent' => 'string',
        'bill_period' => 'string',
        'billing_mode' => 'string',
        'business_mode' => 'string',
        'coupon_amount' => 'string',
        'credit_carried_amount' => 'string',
        'discount_bill_amount' => 'string',
        'original_bill_amount' => 'string',
        'owner_customer_name' => 'string',
        'owner_id' => 'string',
        'owner_user_name' => 'string',
        'paid_amount' => 'string',
        'payable_amount' => 'string',
        'payer_customer_name' => 'string',
        'payer_id' => 'string',
        'payer_user_name' => 'string',
        'preferential_bill_amount' => 'string',
        'product' => 'string',
        'product_zh' => 'string',
        'round_bill_amount' => 'string',
        'seller_customer_name' => 'string',
        'seller_id' => 'string',
        'seller_user_name' => 'string',
        'settlement_type' => 'string',
        'unpaid_amount' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'bill_category_parent' => null,
        'bill_period' => null,
        'billing_mode' => null,
        'business_mode' => null,
        'coupon_amount' => null,
        'credit_carried_amount' => null,
        'discount_bill_amount' => null,
        'original_bill_amount' => null,
        'owner_customer_name' => null,
        'owner_id' => null,
        'owner_user_name' => null,
        'paid_amount' => null,
        'payable_amount' => null,
        'payer_customer_name' => null,
        'payer_id' => null,
        'payer_user_name' => null,
        'preferential_bill_amount' => null,
        'product' => null,
        'product_zh' => null,
        'round_bill_amount' => null,
        'seller_customer_name' => null,
        'seller_id' => null,
        'seller_user_name' => null,
        'settlement_type' => null,
        'unpaid_amount' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'bill_category_parent' => 'BillCategoryParent',
        'bill_period' => 'BillPeriod',
        'billing_mode' => 'BillingMode',
        'business_mode' => 'BusinessMode',
        'coupon_amount' => 'CouponAmount',
        'credit_carried_amount' => 'CreditCarriedAmount',
        'discount_bill_amount' => 'DiscountBillAmount',
        'original_bill_amount' => 'OriginalBillAmount',
        'owner_customer_name' => 'OwnerCustomerName',
        'owner_id' => 'OwnerID',
        'owner_user_name' => 'OwnerUserName',
        'paid_amount' => 'PaidAmount',
        'payable_amount' => 'PayableAmount',
        'payer_customer_name' => 'PayerCustomerName',
        'payer_id' => 'PayerID',
        'payer_user_name' => 'PayerUserName',
        'preferential_bill_amount' => 'PreferentialBillAmount',
        'product' => 'Product',
        'product_zh' => 'ProductZh',
        'round_bill_amount' => 'RoundBillAmount',
        'seller_customer_name' => 'SellerCustomerName',
        'seller_id' => 'SellerID',
        'seller_user_name' => 'SellerUserName',
        'settlement_type' => 'SettlementType',
        'unpaid_amount' => 'UnpaidAmount'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'bill_category_parent' => 'setBillCategoryParent',
        'bill_period' => 'setBillPeriod',
        'billing_mode' => 'setBillingMode',
        'business_mode' => 'setBusinessMode',
        'coupon_amount' => 'setCouponAmount',
        'credit_carried_amount' => 'setCreditCarriedAmount',
        'discount_bill_amount' => 'setDiscountBillAmount',
        'original_bill_amount' => 'setOriginalBillAmount',
        'owner_customer_name' => 'setOwnerCustomerName',
        'owner_id' => 'setOwnerId',
        'owner_user_name' => 'setOwnerUserName',
        'paid_amount' => 'setPaidAmount',
        'payable_amount' => 'setPayableAmount',
        'payer_customer_name' => 'setPayerCustomerName',
        'payer_id' => 'setPayerId',
        'payer_user_name' => 'setPayerUserName',
        'preferential_bill_amount' => 'setPreferentialBillAmount',
        'product' => 'setProduct',
        'product_zh' => 'setProductZh',
        'round_bill_amount' => 'setRoundBillAmount',
        'seller_customer_name' => 'setSellerCustomerName',
        'seller_id' => 'setSellerId',
        'seller_user_name' => 'setSellerUserName',
        'settlement_type' => 'setSettlementType',
        'unpaid_amount' => 'setUnpaidAmount'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'bill_category_parent' => 'getBillCategoryParent',
        'bill_period' => 'getBillPeriod',
        'billing_mode' => 'getBillingMode',
        'business_mode' => 'getBusinessMode',
        'coupon_amount' => 'getCouponAmount',
        'credit_carried_amount' => 'getCreditCarriedAmount',
        'discount_bill_amount' => 'getDiscountBillAmount',
        'original_bill_amount' => 'getOriginalBillAmount',
        'owner_customer_name' => 'getOwnerCustomerName',
        'owner_id' => 'getOwnerId',
        'owner_user_name' => 'getOwnerUserName',
        'paid_amount' => 'getPaidAmount',
        'payable_amount' => 'getPayableAmount',
        'payer_customer_name' => 'getPayerCustomerName',
        'payer_id' => 'getPayerId',
        'payer_user_name' => 'getPayerUserName',
        'preferential_bill_amount' => 'getPreferentialBillAmount',
        'product' => 'getProduct',
        'product_zh' => 'getProductZh',
        'round_bill_amount' => 'getRoundBillAmount',
        'seller_customer_name' => 'getSellerCustomerName',
        'seller_id' => 'getSellerId',
        'seller_user_name' => 'getSellerUserName',
        'settlement_type' => 'getSettlementType',
        'unpaid_amount' => 'getUnpaidAmount'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['bill_category_parent'] = isset($data['bill_category_parent']) ? $data['bill_category_parent'] : null;
        $this->container['bill_period'] = isset($data['bill_period']) ? $data['bill_period'] : null;
        $this->container['billing_mode'] = isset($data['billing_mode']) ? $data['billing_mode'] : null;
        $this->container['business_mode'] = isset($data['business_mode']) ? $data['business_mode'] : null;
        $this->container['coupon_amount'] = isset($data['coupon_amount']) ? $data['coupon_amount'] : null;
        $this->container['credit_carried_amount'] = isset($data['credit_carried_amount']) ? $data['credit_carried_amount'] : null;
        $this->container['discount_bill_amount'] = isset($data['discount_bill_amount']) ? $data['discount_bill_amount'] : null;
        $this->container['original_bill_amount'] = isset($data['original_bill_amount']) ? $data['original_bill_amount'] : null;
        $this->container['owner_customer_name'] = isset($data['owner_customer_name']) ? $data['owner_customer_name'] : null;
        $this->container['owner_id'] = isset($data['owner_id']) ? $data['owner_id'] : null;
        $this->container['owner_user_name'] = isset($data['owner_user_name']) ? $data['owner_user_name'] : null;
        $this->container['paid_amount'] = isset($data['paid_amount']) ? $data['paid_amount'] : null;
        $this->container['payable_amount'] = isset($data['payable_amount']) ? $data['payable_amount'] : null;
        $this->container['payer_customer_name'] = isset($data['payer_customer_name']) ? $data['payer_customer_name'] : null;
        $this->container['payer_id'] = isset($data['payer_id']) ? $data['payer_id'] : null;
        $this->container['payer_user_name'] = isset($data['payer_user_name']) ? $data['payer_user_name'] : null;
        $this->container['preferential_bill_amount'] = isset($data['preferential_bill_amount']) ? $data['preferential_bill_amount'] : null;
        $this->container['product'] = isset($data['product']) ? $data['product'] : null;
        $this->container['product_zh'] = isset($data['product_zh']) ? $data['product_zh'] : null;
        $this->container['round_bill_amount'] = isset($data['round_bill_amount']) ? $data['round_bill_amount'] : null;
        $this->container['seller_customer_name'] = isset($data['seller_customer_name']) ? $data['seller_customer_name'] : null;
        $this->container['seller_id'] = isset($data['seller_id']) ? $data['seller_id'] : null;
        $this->container['seller_user_name'] = isset($data['seller_user_name']) ? $data['seller_user_name'] : null;
        $this->container['settlement_type'] = isset($data['settlement_type']) ? $data['settlement_type'] : null;
        $this->container['unpaid_amount'] = isset($data['unpaid_amount']) ? $data['unpaid_amount'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets bill_category_parent
     *
     * @return string
     */
    public function getBillCategoryParent()
    {
        return $this->container['bill_category_parent'];
    }

    /**
     * Sets bill_category_parent
     *
     * @param string $bill_category_parent bill_category_parent
     *
     * @return $this
     */
    public function setBillCategoryParent($bill_category_parent)
    {
        $this->container['bill_category_parent'] = $bill_category_parent;

        return $this;
    }

    /**
     * Gets bill_period
     *
     * @return string
     */
    public function getBillPeriod()
    {
        return $this->container['bill_period'];
    }

    /**
     * Sets bill_period
     *
     * @param string $bill_period bill_period
     *
     * @return $this
     */
    public function setBillPeriod($bill_period)
    {
        $this->container['bill_period'] = $bill_period;

        return $this;
    }

    /**
     * Gets billing_mode
     *
     * @return string
     */
    public function getBillingMode()
    {
        return $this->container['billing_mode'];
    }

    /**
     * Sets billing_mode
     *
     * @param string $billing_mode billing_mode
     *
     * @return $this
     */
    public function setBillingMode($billing_mode)
    {
        $this->container['billing_mode'] = $billing_mode;

        return $this;
    }

    /**
     * Gets business_mode
     *
     * @return string
     */
    public function getBusinessMode()
    {
        return $this->container['business_mode'];
    }

    /**
     * Sets business_mode
     *
     * @param string $business_mode business_mode
     *
     * @return $this
     */
    public function setBusinessMode($business_mode)
    {
        $this->container['business_mode'] = $business_mode;

        return $this;
    }

    /**
     * Gets coupon_amount
     *
     * @return string
     */
    public function getCouponAmount()
    {
        return $this->container['coupon_amount'];
    }

    /**
     * Sets coupon_amount
     *
     * @param string $coupon_amount coupon_amount
     *
     * @return $this
     */
    public function setCouponAmount($coupon_amount)
    {
        $this->container['coupon_amount'] = $coupon_amount;

        return $this;
    }

    /**
     * Gets credit_carried_amount
     *
     * @return string
     */
    public function getCreditCarriedAmount()
    {
        return $this->container['credit_carried_amount'];
    }

    /**
     * Sets credit_carried_amount
     *
     * @param string $credit_carried_amount credit_carried_amount
     *
     * @return $this
     */
    public function setCreditCarriedAmount($credit_carried_amount)
    {
        $this->container['credit_carried_amount'] = $credit_carried_amount;

        return $this;
    }

    /**
     * Gets discount_bill_amount
     *
     * @return string
     */
    public function getDiscountBillAmount()
    {
        return $this->container['discount_bill_amount'];
    }

    /**
     * Sets discount_bill_amount
     *
     * @param string $discount_bill_amount discount_bill_amount
     *
     * @return $this
     */
    public function setDiscountBillAmount($discount_bill_amount)
    {
        $this->container['discount_bill_amount'] = $discount_bill_amount;

        return $this;
    }

    /**
     * Gets original_bill_amount
     *
     * @return string
     */
    public function getOriginalBillAmount()
    {
        return $this->container['original_bill_amount'];
    }

    /**
     * Sets original_bill_amount
     *
     * @param string $original_bill_amount original_bill_amount
     *
     * @return $this
     */
    public function setOriginalBillAmount($original_bill_amount)
    {
        $this->container['original_bill_amount'] = $original_bill_amount;

        return $this;
    }

    /**
     * Gets owner_customer_name
     *
     * @return string
     */
    public function getOwnerCustomerName()
    {
        return $this->container['owner_customer_name'];
    }

    /**
     * Sets owner_customer_name
     *
     * @param string $owner_customer_name owner_customer_name
     *
     * @return $this
     */
    public function setOwnerCustomerName($owner_customer_name)
    {
        $this->container['owner_customer_name'] = $owner_customer_name;

        return $this;
    }

    /**
     * Gets owner_id
     *
     * @return string
     */
    public function getOwnerId()
    {
        return $this->container['owner_id'];
    }

    /**
     * Sets owner_id
     *
     * @param string $owner_id owner_id
     *
     * @return $this
     */
    public function setOwnerId($owner_id)
    {
        $this->container['owner_id'] = $owner_id;

        return $this;
    }

    /**
     * Gets owner_user_name
     *
     * @return string
     */
    public function getOwnerUserName()
    {
        return $this->container['owner_user_name'];
    }

    /**
     * Sets owner_user_name
     *
     * @param string $owner_user_name owner_user_name
     *
     * @return $this
     */
    public function setOwnerUserName($owner_user_name)
    {
        $this->container['owner_user_name'] = $owner_user_name;

        return $this;
    }

    /**
     * Gets paid_amount
     *
     * @return string
     */
    public function getPaidAmount()
    {
        return $this->container['paid_amount'];
    }

    /**
     * Sets paid_amount
     *
     * @param string $paid_amount paid_amount
     *
     * @return $this
     */
    public function setPaidAmount($paid_amount)
    {
        $this->container['paid_amount'] = $paid_amount;

        return $this;
    }

    /**
     * Gets payable_amount
     *
     * @return string
     */
    public function getPayableAmount()
    {
        return $this->container['payable_amount'];
    }

    /**
     * Sets payable_amount
     *
     * @param string $payable_amount payable_amount
     *
     * @return $this
     */
    public function setPayableAmount($payable_amount)
    {
        $this->container['payable_amount'] = $payable_amount;

        return $this;
    }

    /**
     * Gets payer_customer_name
     *
     * @return string
     */
    public function getPayerCustomerName()
    {
        return $this->container['payer_customer_name'];
    }

    /**
     * Sets payer_customer_name
     *
     * @param string $payer_customer_name payer_customer_name
     *
     * @return $this
     */
    public function setPayerCustomerName($payer_customer_name)
    {
        $this->container['payer_customer_name'] = $payer_customer_name;

        return $this;
    }

    /**
     * Gets payer_id
     *
     * @return string
     */
    public function getPayerId()
    {
        return $this->container['payer_id'];
    }

    /**
     * Sets payer_id
     *
     * @param string $payer_id payer_id
     *
     * @return $this
     */
    public function setPayerId($payer_id)
    {
        $this->container['payer_id'] = $payer_id;

        return $this;
    }

    /**
     * Gets payer_user_name
     *
     * @return string
     */
    public function getPayerUserName()
    {
        return $this->container['payer_user_name'];
    }

    /**
     * Sets payer_user_name
     *
     * @param string $payer_user_name payer_user_name
     *
     * @return $this
     */
    public function setPayerUserName($payer_user_name)
    {
        $this->container['payer_user_name'] = $payer_user_name;

        return $this;
    }

    /**
     * Gets preferential_bill_amount
     *
     * @return string
     */
    public function getPreferentialBillAmount()
    {
        return $this->container['preferential_bill_amount'];
    }

    /**
     * Sets preferential_bill_amount
     *
     * @param string $preferential_bill_amount preferential_bill_amount
     *
     * @return $this
     */
    public function setPreferentialBillAmount($preferential_bill_amount)
    {
        $this->container['preferential_bill_amount'] = $preferential_bill_amount;

        return $this;
    }

    /**
     * Gets product
     *
     * @return string
     */
    public function getProduct()
    {
        return $this->container['product'];
    }

    /**
     * Sets product
     *
     * @param string $product product
     *
     * @return $this
     */
    public function setProduct($product)
    {
        $this->container['product'] = $product;

        return $this;
    }

    /**
     * Gets product_zh
     *
     * @return string
     */
    public function getProductZh()
    {
        return $this->container['product_zh'];
    }

    /**
     * Sets product_zh
     *
     * @param string $product_zh product_zh
     *
     * @return $this
     */
    public function setProductZh($product_zh)
    {
        $this->container['product_zh'] = $product_zh;

        return $this;
    }

    /**
     * Gets round_bill_amount
     *
     * @return string
     */
    public function getRoundBillAmount()
    {
        return $this->container['round_bill_amount'];
    }

    /**
     * Sets round_bill_amount
     *
     * @param string $round_bill_amount round_bill_amount
     *
     * @return $this
     */
    public function setRoundBillAmount($round_bill_amount)
    {
        $this->container['round_bill_amount'] = $round_bill_amount;

        return $this;
    }

    /**
     * Gets seller_customer_name
     *
     * @return string
     */
    public function getSellerCustomerName()
    {
        return $this->container['seller_customer_name'];
    }

    /**
     * Sets seller_customer_name
     *
     * @param string $seller_customer_name seller_customer_name
     *
     * @return $this
     */
    public function setSellerCustomerName($seller_customer_name)
    {
        $this->container['seller_customer_name'] = $seller_customer_name;

        return $this;
    }

    /**
     * Gets seller_id
     *
     * @return string
     */
    public function getSellerId()
    {
        return $this->container['seller_id'];
    }

    /**
     * Sets seller_id
     *
     * @param string $seller_id seller_id
     *
     * @return $this
     */
    public function setSellerId($seller_id)
    {
        $this->container['seller_id'] = $seller_id;

        return $this;
    }

    /**
     * Gets seller_user_name
     *
     * @return string
     */
    public function getSellerUserName()
    {
        return $this->container['seller_user_name'];
    }

    /**
     * Sets seller_user_name
     *
     * @param string $seller_user_name seller_user_name
     *
     * @return $this
     */
    public function setSellerUserName($seller_user_name)
    {
        $this->container['seller_user_name'] = $seller_user_name;

        return $this;
    }

    /**
     * Gets settlement_type
     *
     * @return string
     */
    public function getSettlementType()
    {
        return $this->container['settlement_type'];
    }

    /**
     * Sets settlement_type
     *
     * @param string $settlement_type settlement_type
     *
     * @return $this
     */
    public function setSettlementType($settlement_type)
    {
        $this->container['settlement_type'] = $settlement_type;

        return $this;
    }

    /**
     * Gets unpaid_amount
     *
     * @return string
     */
    public function getUnpaidAmount()
    {
        return $this->container['unpaid_amount'];
    }

    /**
     * Sets unpaid_amount
     *
     * @param string $unpaid_amount unpaid_amount
     *
     * @return $this
     */
    public function setUnpaidAmount($unpaid_amount)
    {
        $this->container['unpaid_amount'] = $unpaid_amount;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

